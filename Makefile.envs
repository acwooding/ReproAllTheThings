#
# Environment Management Makefile
#

include Makefile.include

$(EASYDATA_LOCKFILE): environment.yml
ifeq (conda, $(VIRTUALENV))
	$(CONDA_EXE) env update -n $(PROJECT_NAME) -f $<
	$(CONDA_EXE) env export -n $(PROJECT_NAME) -f $@
else
	$(error Unsupported Environment `$(VIRTUALENV)`. Use conda)
endif

.PHONY: create_environment
## Set up virtual (conda) environment for this project
create_environment: $(EASYDATA_LOCKFILE)
ifeq (conda,$(VIRTUALENV))
	@$(call rm,$(EASYDATA_LOCKFILE))
	@python -c "print('\nNew conda env created. Activate with:\n>>> conda activate $(PROJECT_NAME)\n>>> make update_environment')"
ifneq ("X$(wildcard .post-create-environment.txt)","X")
	@$(call type,.post-create-environment.txt)
endif
else
	$(error Unsupported Environment `$(VIRTUALENV)`. Use conda)
endif

.PHONY: delete_environment
## Delete the virtual (conda) environment for this project
delete_environment:
ifeq (conda,$(VIRTUALENV))
	@echo "Deleting conda environment."
	$(CONDA_EXE) env remove -n $(PROJECT_NAME)
	$(call rm,$(EASYDATA_LOCKFILE))
ifneq ("X$(wildcard .post-delete-environment.txt)","X")
	@$(call type,.post-delete-environment.txt)
endif
else
	$(error Unsupported Environment `$(VIRTUALENV)`. Use conda)
endif

.PHONY: update_environment
## Install or update Python Dependencies in the virtual (conda) environment
update_environment: environment_enabled $(EASYDATA_LOCKFILE)
ifneq ("X$(wildcard .post-update-environment.txt)","X")
	@$(call type,.post-update_environment.txt)
endif

.PHONY: environment_enabled
# Checks that the conda environment is active
environment_enabled:
ifeq (conda,$(VIRTUALENV))
ifneq ($(notdir ${CONDA_DEFAULT_ENV}), $(PROJECT_NAME))
	$(error Run "$(VIRTUALENV) activate $(PROJECT_NAME)" before proceeding...)
endif
else
	$(error Unsupported Environment `$(VIRTUALENV)`. Use conda)
endif

.PHONY: check_lockfile
# Test that an environment lockfile exists
check_lockfile:
ifeq (X,X$(wildcard $(EASYDATA_LOCKFILE)))
	$(error Run "make update_environment" before proceeding...)
endif

.PHONY: check_environment
## Check if environment is enabled and correctly configured
check_environment: environment_enabled check_lockfile $(EASYDATA_LOCKFILE)
